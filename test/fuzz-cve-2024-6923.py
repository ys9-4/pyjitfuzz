import os
import sys
import subprocess
import atheris


def run_python(code: str, jit_enabled: bool) -> str:
    env = os.environ.copy()
    env["PYTHON_JIT"] = "1" if jit_enabled else "0"

    try:
        result = subprocess.run(
            ["python3.13", "-c", code],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            env=env,
            timeout=5
        )
        return result.stdout.strip()
    except subprocess.TimeoutExpired:
        return "TIMEOUT"
    except Exception as e:
        return f"ERROR: {str(e)}"


def make_payload(data: bytes) -> str:
    subject = data.decode("utf-8", errors="ignore")

    return f'''
from email import message_from_string
from email.policy import default

email_template = """\
To: admin@vicarius.com
From: attacker@evil.com
Subject: {subject}
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0

<html>
<body>
<p>This is a test.</p>
</body>
</html>
"""

msg = message_from_string(email_template, policy=default)

for header, value in list(msg.items()):
    del msg[header]
    msg[header] = value

print("done")
'''


def TestOneInput(data: bytes):
    code = make_payload(data)

    out_jit = run_python(code, jit_enabled=True)
    out_interp = run_python(code, jit_enabled=False)

    if out_jit != out_interp:
        print("💥 출력 불일치 발생!")
        print("Subject:", repr(data.decode('utf-8', errors='ignore')))
        print("--- JIT ---")
        print(out_jit)
        print("--- INTERP ---")
        print(out_interp)
        raise RuntimeError("출력 불일치")


def main():
    atheris.Setup(sys.argv, TestOneInput, enable_python_coverage=True)
    atheris.Fuzz()


if __name__ == "__main__":
    main()