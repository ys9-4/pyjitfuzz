# Atheris + cve-2023-24329-poc.py
import atheris
import sys
import urllib.parse

def is_vulnerable_url(input_link: str) -> bool:
    block_schemes = ["file", "gopher", "expect", "php", "dict", "ftp", "glob", "data"]
    block_host = ["instagram.com", "youtube.com", "tiktok.com"]

    parsed = urllib.parse.urlparse(input_link)
    return parsed.scheme not in block_schemes and parsed.hostname not in block_host

def TestOneInput(data: bytes):
    fdp = atheris.FuzzedDataProvider(data)

    try:
        url = fdp.ConsumeUnicodeNoSurrogates(256)
        if not url:
            return

        parsed = urllib.parse.urlparse(url)

        # probe_state()는 객체의 타입 상태를 해시로 요약함
        # print(parsed)
        hash_before = probe_state(parsed)

        if is_vulnerable_url(url):
            # URL이 우회에 성공한 경우 상태를 다시 확인
            hash_after = probe_state(parsed)

            if hash_before != hash_after:
                raise RuntimeError(f"[!] Hash changed!\nURL: {url}\nBefore: {hash_before}\nAfter: {hash_after}")

    except Exception:
        pass


def main():
    atheris.Setup(sys.argv, TestOneInput, enable_python_coverage=True)
    atheris.Fuzz()

if __name__ == "__main__":
    main()