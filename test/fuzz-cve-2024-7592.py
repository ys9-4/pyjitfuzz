# fuzz-cve-2024-7592.py

import atheris
import sys
import time
from django.http import parse_cookie

def TestOneInput(data: bytes):
    if len(data) < 2000:  # 최소 길이 제한 (DoS 유발 가능성 있는 수준)
        return

    try:
        input_str = data.decode("utf-8", errors="ignore")
        cookie_string = f'a="{input_str}";'

        # probe_state()로 타입 정보 해시 추출
        import builtins
        if hasattr(builtins, "probe_state"):
            print("probe_state:", probe_state(cookie_string))

        start = time.time()
        parse_cookie(cookie_string)
        end = time.time()

        # 특정 임계값 이상일 경우 문제로 판단 (예: 0.05초 이상 소요)
        if end - start > 0.05:
            raise RuntimeError(f"[!] parse_cookie took too long ({end - start:.3f}s)")

    except Exception:
        pass

def main():
    atheris.Setup(sys.argv, TestOneInput, enable_python_coverage=True)
    atheris.Fuzz()

if __name__ == "__main__":
    main()